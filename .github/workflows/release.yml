name: Release

on:
  push:
    tags:
      - v*

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: Publish to crates.io
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: Setup Rust nightly for formatting
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check format
        run: cargo +nightly fmt -- --check --config-path=rustfmt.toml

      - name: Check clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --all-features

      - name: Build documentation
        run: cargo doc --no-deps --all-features

      - name: Clean up .DS_Store files
        run: find . -name ".DS_Store" -delete
        
      - name: Verify tag matches version
        run: |
          TAG=${GITHUB_REF#refs/tags/v}
          CARGO_VERSION=$(grep "^version" Cargo.toml | head -n 1 | cut -d '"' -f 2)
          echo "Tag: $TAG"
          echo "Cargo.toml version: $CARGO_VERSION"
          if [ "$TAG" != "$CARGO_VERSION" ]; then
            echo "Tag version ($TAG) does not match Cargo.toml version ($CARGO_VERSION)"
            exit 1
          fi

      - name: Verify package
        run: cargo package --no-verify

      - name: Publish to crates.io
        run: cargo publish --no-verify
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  create-github-release:
    name: Create GitHub Release
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-configuration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.CHANGELOG_BUILDER_GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: darwin-metrics ${{ steps.get_version.outputs.VERSION }}
          body: |
            # darwin-metrics ${{ steps.get_version.outputs.VERSION }}
            
            ${{ steps.github_release.outputs.changelog }}
            
            ## Installation
            
            ```toml
            [dependencies]
            darwin-metrics = "${{ steps.get_version.outputs.VERSION }}"
            ```
            
            ## Documentation
            
            Full documentation is available at [docs.rs](https://docs.rs/darwin-metrics/${{ steps.get_version.outputs.VERSION }})
          files: |
            LICENSE
            README.md
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || secrets.RELEASE_ACTION_GITHUB_TOKEN }}
